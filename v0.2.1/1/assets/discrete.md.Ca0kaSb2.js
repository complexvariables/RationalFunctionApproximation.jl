import{_ as i,c as a,o as n,aA as p}from"./chunks/framework.GZkRxI4b.js";const E=JSON.parse('{"title":"Discrete data","description":"","frontmatter":{},"headers":[],"relativePath":"discrete.md","filePath":"discrete.md","lastUpdated":null}'),e={name:"discrete.md"};function t(h,s,l,k,d,r){return n(),a("div",null,s[0]||(s[0]=[p(`<h1 id="Discrete-data" tabindex="-1">Discrete data <a class="header-anchor" href="#Discrete-data" aria-label="Permalink to &quot;Discrete data {#Discrete-data}&quot;">​</a></h1><p>The original AAA algorithm (<a href="https://epubs.siam.org/doi/abs/10.1137/16M1106122" target="_blank" rel="noreferrer">Nakatsukasa, Sète, Trefethen 2018</a>) works with a fixed set of points on the domain of approximation. There is a legacy <code>aaa</code> function that can work with this type of data:</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">using</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> RationalFunctionApproximation, ComplexRegions</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">x </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> -</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.01</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">f </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> x </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> tanh</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">5</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> *</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (x </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0.2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">r </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> aaa</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(x, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">f</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.(x))</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>Barycentric{Float64, Float64} rational interpolant of type (35, 35):</span></span>
<span class="line"><span>    -0.999988=&gt;-1.0,  0.999329=&gt;1.0,  -0.99186=&gt;-0.35,  …  -0.999727=&gt;-0.69</span></span></code></pre></div><p>However, it&#39;s preferable to use the <code>approximate</code> function for this purpose, as the result type is more useful within the package. Simply pass the function and, in the form of a vector, the domain.</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">r </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> approximate</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(f, x)</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>Barycentric{Float64, Float64} rational interpolant of type (11, 11) on the domain: -1.0:0.01:1.0</span></span></code></pre></div><p>As long as there are no singularities as close to the domain as the sample points are to one another, this fully discrete approach should be fine:</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">I </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> unit_interval</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">println</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;nearest pole is </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">$(minimum(dist(z, I) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">for</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> z </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">in</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> poles(r)))</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> away&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">_, err </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> check</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(r);</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">println</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;max error on the given domain: &quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">maximum</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(abs, err))</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>nearest pole is 0.31415926535543987 away</span></span>
<span class="line"><span>[ Info: Max error is 2.65e-14</span></span>
<span class="line"><span>max error on the given domain: 2.653433028854124e-14</span></span></code></pre></div><p>But if the distance to a singularity is comparable to the sample spacing, the quality of the approximation may suffer. Even worse, the method may not be aware that it has failed.</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">f </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> x </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> tanh</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">400</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> *</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (x </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0.2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">r </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> approximate</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(f, x)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">println</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;nearest pole is </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">$(minimum(dist(z, I) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">for</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> z </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">in</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> poles(r)))</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> away&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">_, err </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> check</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(r);</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">println</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;max error on the given domain: &quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">maximum</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(abs, err))</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">err </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> maximum</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">abs</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">f</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(x)</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> r</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(x)) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">for</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> x </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">in</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> range</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3000</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">println</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;max error on finer test points: &quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, err)</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>n = 2  idx_max = 1  i_node = CartesianIndex(1, 1)</span></span>
<span class="line"><span>n = 3  idx_max = 125  i_node = CartesianIndex(127, 1)</span></span>
<span class="line"><span>n = 4  idx_max = 15  i_node = CartesianIndex(16, 1)</span></span>
<span class="line"><span>n = 5  idx_max = 150  i_node = CartesianIndex(154, 1)</span></span>
<span class="line"><span>n = 6  idx_max = 196  i_node = CartesianIndex(201, 1)</span></span>
<span class="line"><span>n = 7  idx_max = 120  i_node = CartesianIndex(122, 1)</span></span>
<span class="line"><span>n = 8  idx_max = 177  i_node = CartesianIndex(183, 1)</span></span>
<span class="line"><span>n = 9  idx_max = 92  i_node = CartesianIndex(94, 1)</span></span>
<span class="line"><span>n = 10  idx_max = 117  i_node = CartesianIndex(120, 1)</span></span>
<span class="line"><span>n = 11  idx_max = 113  i_node = CartesianIndex(116, 1)</span></span>
<span class="line"><span>n = 12  idx_max = 117  i_node = CartesianIndex(123, 1)</span></span>
<span class="line"><span>n = 13  idx_max = 108  i_node = CartesianIndex(111, 1)</span></span>
<span class="line"><span>n = 14  idx_max = 131  i_node = CartesianIndex(141, 1)</span></span>
<span class="line"><span>n = 15  idx_max = 113  i_node = CartesianIndex(118, 1)</span></span>
<span class="line"><span>n = 16  idx_max = 77  i_node = CartesianIndex(79, 1)</span></span>
<span class="line"><span>n = 17  idx_max = 120  i_node = CartesianIndex(132, 1)</span></span>
<span class="line"><span>n = 18  idx_max = 147  i_node = CartesianIndex(162, 1)</span></span>
<span class="line"><span>n = 19  idx_max = 100  i_node = CartesianIndex(104, 1)</span></span>
<span class="line"><span>n = 20  idx_max = 59  i_node = CartesianIndex(61, 1)</span></span>
<span class="line"><span>n = 21  idx_max = 108  i_node = CartesianIndex(115, 1)</span></span>
<span class="line"><span>n = 22  idx_max = 171  i_node = CartesianIndex(191, 1)</span></span>
<span class="line"><span>n = 23  idx_max = 45  i_node = CartesianIndex(47, 1)</span></span>
<span class="line"><span>n = 24  idx_max = 114  i_node = CartesianIndex(130, 1)</span></span>
<span class="line"><span>n = 25  idx_max = 105  i_node = CartesianIndex(113, 1)</span></span>
<span class="line"><span>n = 26  idx_max = 118  i_node = CartesianIndex(137, 1)</span></span>
<span class="line"><span>n = 27  idx_max = 146  i_node = CartesianIndex(169, 1)</span></span>
<span class="line"><span>n = 28  idx_max = 32  i_node = CartesianIndex(34, 1)</span></span>
<span class="line"><span>n = 29  idx_max = 99  i_node = CartesianIndex(107, 1)</span></span>
<span class="line"><span>n = 30  idx_max = 106  i_node = CartesianIndex(121, 1)</span></span>
<span class="line"><span>n = 31  idx_max = 171  i_node = CartesianIndex(200, 1)</span></span>
<span class="line"><span>n = 32  idx_max = 82  i_node = CartesianIndex(88, 1)</span></span>
<span class="line"><span>n = 33  idx_max = 120  i_node = CartesianIndex(145, 1)</span></span>
<span class="line"><span>n = 34  idx_max = 104  i_node = CartesianIndex(119, 1)</span></span>
<span class="line"><span>nearest pole is 0.004481098151799039 away</span></span>
<span class="line"><span>[ Info: Max error is 1.67e-14</span></span>
<span class="line"><span>max error on the given domain: 1.6653345369377348e-14</span></span>
<span class="line"><span>max error on finer test points: 0.0507185469433139</span></span></code></pre></div><p>In the continuous mode, the adaptive sampling of the domain attempts to ensure that the approximation is accurate everywhere.</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">r </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> approximate</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(f, I; tol</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1e-12</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">err </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> maximum</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">abs</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">f</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(x)</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> r</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(x)) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">for</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> x </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">in</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> range</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3000</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">println</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;max error on finer test points: &quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, err)</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>max error on finer test points: 7.924771949774367e-13</span></span></code></pre></div>`,16)]))}const g=i(e,[["render",t]]);export{E as __pageData,g as default};
